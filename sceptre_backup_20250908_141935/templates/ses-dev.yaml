AWSTemplateFormatVersion: '2010-09-09'
Description: 'Development SES Configuration (Depends on Production EmailIdentity) - Tokyo Region (ap-northeast-1)'

Parameters:
  DomainName:
    Type: String
    Description: Domain name for SES configuration (managed by production)
    Default: goo.ne.jp

  Environment:
    Type: String
    Description: Environment name
    Default: development
    AllowedValues:
      - development
      - staging
      - production

  ProjectCode:
    Type: String
    Description: Project code for resource naming
    Default: ses-migration

  AllowedIPRanges:
    Type: CommaDelimitedList
    Description: Allowed IP address ranges for access control
    Default: "10.0.0.0/8,192.168.1.0/24"

  SESAllowedIPs:
    Type: CommaDelimitedList
    Description: Specific IP addresses allowed for SES sending (development)
    Default: "202.217.75.88/32,202.217.75.81/32"

  EnableSESIPFiltering:
    Type: String
    Description: Enable IP-based filtering for SES sending
    Default: "false"
    AllowedValues: ["true", "false"]

  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch Logs retention period in days
    Default: 90
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2555]

  CloudWatchMetricNamespace:
    Type: String
    Description: CloudWatch metric namespace for SES
    Default: "ses-migration/development/SES"

  EnableBounceComplaintHandling:
    Type: String
    Description: Enable bounce and complaint handling
    Default: "true"
    AllowedValues: ["true", "false"]

  NotificationEmail:
    Type: String
    Description: Email address for notifications
    Default: dev@goo.ne.jp

  NotificationPhone:
    Type: String
    Description: Phone number for SMS notifications (E.164 format)
    Default: "+81901234567"

  S3BucketName:
    Type: String
    Description: S3 bucket name for logs (imported from base stack)

  SNSTopicArn:
    Type: String
    Description: SNS topic ARN for notifications (imported from base stack)

  BounceRateThreshold:
    Type: Number
    Description: Bounce rate threshold for alerts (percentage)
    Default: 10
    MinValue: 0
    MaxValue: 100

  ComplaintRateThreshold:
    Type: Number
    Description: Complaint rate threshold for alerts (percentage)
    Default: 0.5
    MinValue: 0
    MaxValue: 100

  SuccessRateThreshold:
    Type: Number
    Description: Success rate threshold for alerts (percentage)
    Default: 90
    MinValue: 0
    MaxValue: 100

Conditions:
  EnableBounceComplaintHandlingCondition: !Equals [!Ref EnableBounceComplaintHandling, "true"]
  EnableSESIPFilteringCondition: !Equals [!Ref EnableSESIPFiltering, "true"]

Resources:
  # SES Configuration Set (Development - uses shared EmailIdentity from Production)
  SESConfigurationSet:
    Type: AWS::SES::ConfigurationSet
    Properties:
      Name: !Sub "${ProjectCode}-${Environment}-ses-config"
      DeliveryOptions:
        TlsPolicy: OPTIONAL  # Development: More lenient
      ReputationOptions:
        ReputationMetricsEnabled: true
      SendingOptions:
        SendingEnabled: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-ses-config"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Region
          Value: "ap-northeast-1"
        - Key: DependsOn
          Value: "production-email-identity"

  # CloudWatch Log Group for SES (Development)
  SESLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ses/${ProjectCode}/${Environment}"
      RetentionInDays: !Ref CloudWatchLogRetentionDays
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-ses-logs"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Region
          Value: "ap-northeast-1"

  # SES IP-Restricted IAM Policy (Development)
  SESIPRestrictedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: EnableSESIPFilteringCondition
    Properties:
      ManagedPolicyName: !Sub "${ProjectCode}-${Environment}-ses-ip-restricted-policy"
      Description: "SES sending policy with IP restrictions for development environment"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ses:SendEmail"
              - "ses:SendRawEmail"
              - "ses:GetSendQuota"
              - "ses:GetSendStatistics"
            Resource: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*"
            Condition:
              IpAddress:
                "aws:SourceIp": !Ref SESAllowedIPs
          - Effect: Allow
            Action:
              - "ses:GetConfigurationSet"
              - "ses:DescribeConfigurationSet"
            Resource: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:configuration-set/*"

  # IAM Role for SES (Development)
  SESIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectCode}-${Environment}-ses-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${ProjectCode}-${Environment}-ses-policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !Sub "${SESLogGroup.Arn}:*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: !Sub "arn:aws:s3:::${S3BucketName}/*"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref SNSTopicArn
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                  - ses:GetSendQuota
                  - ses:GetSendStatistics
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-ses-role"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode

  # IAM Role for Lambda Function (Development)
  LambdaIAMRole:
    Type: AWS::IAM::Role
    Condition: EnableBounceComplaintHandlingCondition
    Properties:
      RoleName: !Sub "${ProjectCode}-${Environment}-lambda-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: !Sub "${ProjectCode}-${Environment}-lambda-policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:GetSendQuota
                  - ses:GetSendStatistics
                Resource: "*"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref SNSTopicArn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-lambda-role"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode

  # CloudWatch Dashboard for SES (Development)
  SESDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${ProjectCode}-${Environment}-ses-dashboard"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/SES", "Send", "Namespace", "${CloudWatchMetricNamespace}"],
                  [".", "Bounce", ".", "."],
                  [".", "Complaint", ".", "."],
                  [".", "Delivery", ".", "."]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ap-northeast-1",
                "title": "Development SES Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/SES", "Send", "Namespace", "${CloudWatchMetricNamespace}"],
                  [".", "Reject", ".", "."]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ap-northeast-1",
                "title": "Development SES Rejections",
                "period": 300
              }
            }
          ]
        }

  # CloudWatch Alarms (Development - More lenient thresholds)
  BounceRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableBounceComplaintHandlingCondition
    Properties:
      AlarmName: !Sub "${ProjectCode}-${Environment}-bounce-rate-alarm"
      AlarmDescription: "Development bounce rate exceeds threshold"
      MetricName: Bounce
      Namespace: AWS/SES
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: !Ref BounceRateThreshold
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref SNSTopicArn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-bounce-rate-alarm"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode

  ComplaintRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableBounceComplaintHandlingCondition
    Properties:
      AlarmName: !Sub "${ProjectCode}-${Environment}-complaint-rate-alarm"
      AlarmDescription: "Development complaint rate exceeds threshold"
      MetricName: Complaint
      Namespace: AWS/SES
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: !Ref ComplaintRateThreshold
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref SNSTopicArn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-complaint-rate-alarm"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode

  # Lambda Function for Bounce/Complaint Processing (Development)
  SESProcessingFunction:
    Type: AWS::Lambda::Function
    Condition: EnableBounceComplaintHandlingCondition
    Properties:
      FunctionName: !Sub "${ProjectCode}-${Environment}-ses-processing"
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt LambdaIAMRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3

          def handler(event, context):
              print(f"Processing development SES event: {json.dumps(event)}")
              return {"statusCode": 200}
      Timeout: 60
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          PROJECT_CODE: !Ref ProjectCode
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-ses-processing"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode

  # SNS Topic for SES Notifications (Development)
  SESNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${ProjectCode}-${Environment}-ses-notifications"
      DisplayName: !Sub "Development SES Notifications for ${ProjectCode}"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-ses-notifications"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode

  # SNS Topic Policy (Development)
  SESNotificationTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SESNotificationTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: sns:Publish
            Resource: !Ref SESNotificationTopic

Outputs:
  # Note: EmailIdentity is managed by production environment
  SharedEmailIdentityDomain:
    Description: Shared email identity domain (managed by production)
    Value: !Ref DomainName
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SharedEmailIdentityDomain"

  SESConfigurationSetName:
    Description: Name of the development SES configuration set
    Value: !Ref SESConfigurationSet
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SESConfigurationSetName"

  SESLogGroupName:
    Description: Name of the CloudWatch log group for SES
    Value: !Ref SESLogGroup
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SESLogGroupName"

  SESIAMRoleArn:
    Description: ARN of the IAM role for SES
    Value: !GetAtt SESIAMRole.Arn
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SESIAMRoleArn"

  SESDashboardName:
    Description: Name of the CloudWatch dashboard for SES
    Value: !Ref SESDashboard
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SESDashboardName"

  SESNotificationTopicArn:
    Description: ARN of the SNS topic for SES notifications
    Value: !Ref SESNotificationTopic
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SESNotificationTopicArn"
