AWSTemplateFormatVersion: '2010-09-09'
Description: 'SES configuration and BYODKIM initialization'

Parameters:
  ProjectName:
    Type: String
    Description: Project name for resource naming
    Default: aws-byodmim
  
  Environment:
    Type: String
    Description: Environment name
    AllowedValues:
      - development
      - staging
      - production
      - prod
    Default: development
  
  DomainName:
    Type: String
    Description: Domain name for email identity
    Default: goo.ne.jp
  
  DKIMManagerFunctionArn:
    Type: String
    Description: ARN of the DKIM Manager Lambda function
  
  DKIMSeparator:
    Type: String
    Description: DKIM separator prefix (date will be automatically appended)
    Default: gooid-21-pro

Resources:
  # SES Email Identity for the domain (DKIM configuration disabled - will be configured in Phase 4-7)
  EmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: !Ref DomainName
      # DkimSigningAttributes completely removed - DKIM will be configured in Phase 4-7
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-email-identity"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: "Email identity for DKIM"

  # Configuration Set for email sending
  ConfigurationSet:
    Type: AWS::SES::ConfigurationSet
    Properties:
      Name: !Sub "${ProjectName}-${Environment}-config-set"
      ReputationOptions:
        ReputationMetricsEnabled: true
      SendingOptions:
        SendingEnabled: true
      SuppressionOptions:
        SuppressedReasons:
          - BOUNCE
          - COMPLAINT
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-config-set"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # Event Destination for bounce/complaint tracking
  EventDestination:
    Type: AWS::SES::ConfigurationSetEventDestination
    Properties:
      ConfigurationSetName: !Ref ConfigurationSet
      EventDestination:
        Name: !Sub "${ProjectName}-${Environment}-event-destination"
        Enabled: true
        MatchingEventTypes:
          - bounce
          - complaint
          - delivery
          - send
          - reject
          - open
          - click
        CloudWatchDestination:
          DimensionConfigurations:
            - DimensionName: "MessageTag"
              DimensionValueSource: "messageTag"
              DefaultDimensionValue: "default"

  # CloudWatch Log Group for SES events
  SESLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ses/${ProjectName}-${Environment}"
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-ses-logs"
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # EventBridge rule to trigger phased DKIM setup (Phase 4-7 implementation)
  DKIMPhaseManagerRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger phased DKIM setup when stack is completed"
      EventPattern:
        source: ["aws.cloudformation"]
        detail-type: ["CloudFormation Stack Status Change"]
        detail:
          status-details:
            status: ["CREATE_COMPLETE", "UPDATE_COMPLETE"]
          stack-name: [!Ref "AWS::StackName"]
      State: ENABLED
      Targets:
        - Arn: !Ref DKIMManagerFunctionArn
          Id: "DKIMPhaseManager"
          Input: !Sub |
            {
              "phase": "3",
              "action": "phase_manager",
              "domain": "${DomainName}",
              "dkimSeparator": "${DKIMSeparator}",
              "environment": "${Environment}",
              "projectName": "${ProjectName}"
            }

  # Lambda permission for EventBridge
  DKIMManagerEventBridgePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DKIMManagerFunctionArn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DKIMPhaseManagerRule.Arn

Outputs:
  EmailIdentityName:
    Description: Name of the SES Email Identity
    Value: !Ref EmailIdentity
    Export:
      Name: !Sub "${ProjectName}-${Environment}-email-identity-name"
  
  ConfigurationSetName:
    Description: Name of the SES Configuration Set
    Value: !Ref ConfigurationSet
    Export:
      Name: !Sub "${ProjectName}-${Environment}-config-set-name"
  
  SESLogGroupName:
    Description: Name of the SES log group
    Value: !Ref SESLogGroup
    Export:
      Name: !Sub "${ProjectName}-${Environment}-ses-log-group-name"
  
  SESDomainName:
    Description: Configured domain name for SES
    Value: !Ref DomainName
    Export:
      Name: !Sub "${ProjectName}-${Environment}-ses-domain-name"
  
  DKIMSeparatorWithDate:
    Description: DKIM separator with today's date appended
    Value: !Sub "${DKIMSeparator}-${AWS::Region}-${AWS::AccountId}"
    Export:
      Name: !Sub "${ProjectName}-${Environment}-dkim-separator-with-date"
  
  DKIMPhaseManagerRuleArn:
    Description: ARN of the DKIM phase manager EventBridge rule
    Value: !GetAtt DKIMPhaseManagerRule.Arn
    Export:
      Name: !Sub "${ProjectName}-${Environment}-dkim-phase-manager-rule"
