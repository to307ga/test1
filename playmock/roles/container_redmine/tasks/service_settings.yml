---
# Redmine pod を起動し、systemd サービスとして自動起動するよう登録する
#
- name: XDG_RUNTIME_DIR 設定値の取得(systemd関連コマンドに必要)
  # systemd --user を実行する際に環境変数 XDG_RUNTIME_DIR が参照される
  become: true
  become_user: container_user
  block:
    - name: Get UID of user
      ansible.builtin.command: id -u container_user
      register: user_uid_result
      changed_when: false
    - name: Set XDG_RUNTIME_DIR from UID
      ansible.builtin.set_fact:
        xdg_runtime_dir: "/run/user/{{ user_uid_result.stdout }}"

# Redmine Pod の再構築が必要かどうかを settings.yml, build.yml タスクの結果から判定する
# ※Pod構築ファイル(redminepod.yml)の変更、Redmine または DB イメージが更新された場合、
#   Redmine Pod の再起動(既存Podの削除と作成)が必要なため、
#   systemd ユニットファイルの再生成も必要となる。
- name: Redmine Pod の稼働状況の確認
  become: true
  become_user: container_user
  block:
    - name: Redmine pod が既に存在するかどうか調べる
      containers.podman.podman_pod_info:
        name: redminepod
      register: redminepod_info
      ignore_errors: true
    - name: Redmine pod が存在するかを redminepod_exists にセット
      ansible.builtin.set_fact:
        redminepod_exists: "{{ (redminepod_info.pods | default([])) | length > 0 }}"
    - name: Redmine pod の稼働状況を redminepod_running にセット
      ansible.builtin.set_fact:
        redminepod_running: >-
          {{
            (redminepod_info.pods | length > 0 and redminepod_info.pods[0].State == 'Running')
          }}
    - name: Redmine pod 状況チェックの結果
      ansible.builtin.debug:
        msg: >
          Pod 'redminepod' Status: Exits: {{ redminepod_exists }},
          Running: {{ redminepod_running }}

- name: Redmine Pod systemd サービスのユニット再起動が必要かどうか(pod_needs_restart)
  ansible.builtin.set_fact:
    pod_needs_restart: >-
      {{
        redminepod_yml_result.changed or
        redmine_image_updated or
        db_image_updated or
        not redminepod_running 
      }}

- name: Redmine Pod systemd サービスの存在を確認(pod_service_exists)
  # ここでは systemd ユニットファイル名は 'pod-redminepod.service' と固定的に指定している。
  # これは podman_generate_systemd モジュールによるユニットファイル名生成ルールのデフォルト
  # に従っているため。
  become: true
  become_user: container_user
  block:
    - name: pod-redminepod.service ユニットファイルの確認
      ansible.builtin.stat:
        path: "/opt/containers/.config/systemd/user/pod-redminepod.service"
      register: unit_file_exists
      changed_when: false
    - name: 結果を pod_service_exists に
      ansible.builtin.set_fact:
        pod_service_exists: "{{ unit_file_exists.stat.exists }}"

- name: Redmine Pod systemd サービスの状況を確認(pod_service_activated)
  become: true
  become_user: container_user
  block:
    - name: pod-redminepod.service が Active かどうか
      ansible.builtin.command: systemctl --user is-active pod-redminepod.service
      register: pod_status_check
      changed_when: false
      failed_when: false
      environment:
        XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
    - name: 結果を pod_service_activated に
      ansible.builtin.set_fact:
        pod_service_activated: "{{ pod_status_check.stdout == 'active' }}"
    - name: サービスの稼働状況を出力(デバッグ用)
      ansible.builtin.debug:
        msg: >
          Redmine Pod Service is {{ 'ACTIVE' if pod_service_activated
            else 'NOT ACTIVE (status=' ~ pod_status_check.stdout ~ ')' }}

# ここまでの状況確認を元に Redmine Pod systemd サービスの再構築が必要かどうかを判定する
# 以下の状況に一つでも合致する場合にサービス再構築が必要
# ・コンテナイメージが更新(作成)された
# ・systemd ユニットファイルが未生成
- name: Redmine Pod systemd サービスの再構築が必要かどうか(service_needs_recreate)
  set_fact:
    service_needs_recreate: "{{ not pod_service_exists or pod_needs_restart }}"

- name: Redmine Pod systemd サービスの再構成と起動
  # systemd ユニットファイルは固定的なファイルがあるのではなく、
  # 都度作成したPod情報から生成する必要がある
  become: true
  become_user: container_user
  block:
    - name: Redmine Pod サービスの停止（アクティブだった場合）
      ansible.builtin.systemd_service:
        name: pod-redminepod
        state: stopped
        scope: user
        enabled: false
      environment:
        XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
      when: pod_service_activated
    - name: Redmine Pod の起動(既にpodがあれば削除してから再作成する)
      # podman play kube コマンドは Pod を再起動する機能を持たないため、
      # 一度削除(DOWN)してから実行する必要があるが、 containers.podman.podman_play 
      # モジュールを使用することで簡易に記述できる（ recreate: true ）
      # Containers.Podman コレクションのバージョン 1.16.1 以降が必要
      containers.podman.podman_play:
        kube_file: /opt/containers/redmine/redminepod.yml
        recreate: true
        state: started
        debug: true
      environment:
        XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
    - name: Redmine Pod サービスの systemd ユニットファイルの生成
      become: true
      become_user: container_user
      containers.podman.podman_generate_systemd:
        name: redminepod
        dest: /opt/containers/.config/systemd/user
        force: true
        restart_policy: always
    - name: Redmime Pod サービスの起動
      # podman_generate_systemd でユニットファイルを生成した直後の systemd_service は相性が悪く、
      # 正常な起動を判断できないようだ。具体的には systemctl --user start 時にエラー
      # "Job for pod-redminepod.service failed because the service did not take the steps required by its unit configuration."
      # が報告され失敗したように見えるが、実際には正常に起動している。
      # 実際に起動したかどうかはこの後のタスクで保証する
      ansible.builtin.systemd_service:
        name: pod-redminepod
        scope: user
        daemon_reload: true
        state: started
        enabled: true
      environment:
        XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
      ignore_errors: true
  when: service_needs_recreate 

- name: Redmine Pod サービス起動を保証する
  become: true
  become_user: container_user
  ansible.builtin.systemd_service:
    name: pod-redminepod.service
    scope: user
    state: started
    enabled: true
  environment:
    XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
