<?xml version="1.0" encoding="UTF-8"?>
<!--
             Muleの設定ファイル。
        @author $Author: uehara $
        @version $Id: mule-config.xml 2411 2012-02-14 03:47:18Z iihara@cubetech.co.jp $
 -->
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:spring="http://www.springframework.org/schema/beans"
        xmlns:smtp="http://www.mulesource.org/schema/mule/smtp/2.2"
        xmlns:smtps="http://www.mulesource.org/schema/mule/smtps/2.2"
        xmlns:http="http://www.mulesource.org/schema/mule/http/2.2"
        xmlns:https="http://www.mulesource.org/schema/mule/https/2.2"
        xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
        xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.mulesource.org/schema/mule/smtp/2.2 http://www.mulesource.org/schema/mule/smtp/2.2/mule-smtp.xsd
                http://www.mulesource.org/schema/mule/smtps/2.2 http://www.mulesource.org/schema/mule/smtps/2.2/mule-smtps.xsd
                http://www.mulesource.org/schema/mule/http/2.2 http://www.mulesource.org/schema/mule/http/2.2/mule-http.xsd
                http://www.mulesource.org/schema/mule/https/2.2 http://www.mulesource.org/schema/mule/https/2.2/mule-https.xsd
                http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
                http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd">

        <!-- 共通設定。 -->
        <spring:beans>
                <spring:bean name="SpringContainerContext" class="jp.ne.goo.gbs.extif.spring.SpringContainerContext">
                        <spring:property name="logMsgPrefix" value="[gbs_mule] "/>
                        <spring:property name="logMsgCodePrefix" value="GBS-LS"/>
                        <spring:property name="logMsgCodeSuffix" value=":"/>
                        <spring:property name="errorInfoLogMsgPrefix" value="[ERROR->INFO]"/>
                        <spring:property name="infoLogExceptionList">
                                <spring:list>
                                        <spring:value>java.net.SocketTimeoutException</spring:value>
                                        <spring:value>com.sun.mail.smtp.SMTPAddressFailedException</spring:value>
                                </spring:list>
                        </spring:property>
                        <spring:property name="doMsgDump" value="true"/>
                        <spring:property name="reqMsgDumpPrefix" value="\n## reqMsgDumpStart #####################################################################################################\n"/>
                        <spring:property name="reqMsgDumpSuffix" value="\n## reqMsgDumpEnd #######################################################################################################"/>
                        <spring:property name="resMsgDumpPrefix" value="\n## resMsgDumpStart #####################################################################################################\n"/>
                        <spring:property name="resMsgDumpSuffix" value="\n## resMsgDumpEnd #######################################################################################################"/>
                        <spring:property name="httpConnectionTimeout" value="15000"/>
                        <spring:property name="httpSoTimeout" value="90000"/>
                </spring:bean>
                <spring:bean name="ModelNotificationListener" class="jp.ne.goo.gbs.extif.api.context.notification.ModelNotificationListener"/>
        </spring:beans>

        <notifications>
                <notification event="MODEL"/>
                <notification-listener ref="ModelNotificationListener"/>
        </notifications>

        <!-- VMのコネクタ。 -->
        <vm:connector name="vmConnector">
                <receiver-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
                <dispatcher-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
        </vm:connector>

        <!-- SMTPのコネクタ。 -->
        <smtp:connector name="outSmtp">
                <receiver-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
                <dispatcher-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
        </smtp:connector>

        <!-- HTTPのコネクタ。 -->
        <http:connector name="inHttp">
                <receiver-threading-profile
                        maxThreadsActive="2000"
                        maxThreadsIdle="2000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
                <dispatcher-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
        </http:connector>
        <http:connector name="outHttp">
                <receiver-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
                <dispatcher-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
        </http:connector>
        <https:connector name="outHttps">
                <receiver-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
                <dispatcher-threading-profile
                        maxThreadsActive="1000"
                        maxThreadsIdle="1000"
                        threadTTL="60000"
                        poolExhaustedAction="WAIT"
                        threadWaitTimeout="-1"
                        maxBufferSize="0"
                />
                <https:tls-client path="/usr/local/app/gbs/gbs_mule/conf/gbs_mule.jks" storePassword="gbs_mule"/>
                <https:tls-key-store path="/usr/local/app/gbs/gbs_mule/conf/gbs_mule.jks" keyPassword="gbs_mule" storePassword="gbs_mule"/>
        </https:connector>

        <!-- トランスフォーマー -->
        <custom-transformer
                name="HttpRequestErrorToHttpRequestErrorTransformer"
                class="jp.ne.goo.gbs.extif.transformer.HttpRequestErrorToHttpRequestErrorTransformer"
        />
        <custom-transformer
                name="SystemErrorToSystemErrorTransformer"
                class="jp.ne.goo.gbs.extif.transformer.SystemErrorToSystemErrorTransformer"
        />
        <custom-transformer
                name="HealthCheckRequestToHealthCheckResponse"
                class="jp.ne.goo.gbs.extif.transformer.HealthCheckRequestToHealthCheckResponse"
        />
        <custom-transformer
                name="HttpRequestToAbstractMuleMessage"
                class="jp.ne.goo.gbs.extif.transformer.HttpRequestToAbstractMuleMessage"
        />
        <custom-transformer
                name="MuleMessageToHexString"
                class="jp.ne.goo.gbs.extif.transformer.MuleMessageToHexString"
        />
        <custom-transformer
                name="MuleMessageToMimeTransformer"
                class="jp.ne.goo.gbs.extif.transformer.MuleMessageToMimeTransformer"
        />
        <custom-transformer
                name="NoneSmtpResponseToHttpResponse"
                class="jp.ne.goo.gbs.extif.transformer.NoneSmtpResponseToHttpResponse"
        />
        <custom-transformer
                name="MuleMessageToByteArray"
                class="jp.ne.goo.gbs.extif.transformer.MuleMessageToByteArray"
        />
        <custom-transformer
                name="HttpResponseToAbstractMuleMessage"
                class="jp.ne.goo.gbs.extif.transformer.HttpResponseToAbstractMuleMessage"
        />
        <custom-transformer
                name="ObjectToDefaultMuleMessage"
                class="jp.ne.goo.gbs.extif.transformer.ObjectToDefaultMuleMessage"
        />
        <custom-transformer
                name="GZipHttpResponseToHttpResponse"
                class="jp.ne.goo.gbs.extif.transformer.GZipHttpResponseToHttpResponse"
        />
        <message-properties-transformer name="DeleteContenttypeHeader">
                <delete-message-property key="Content-type"/>
        </message-properties-transformer>
        <http:message-to-http-response-transformer name="MuleMessageToHttpResponse"/>

        <!-- モデル -->
        <model name="gbsModel">
                <service name="errorhandlerUMO">
                        <inbound>
                                <vm:inbound-endpoint
                                        path="httpRequestErrorHandler"
                                        transformer-refs="HttpRequestErrorToHttpRequestErrorTransformer"
                                        synchronous="true"
                                        connector-ref="vmConnector"
                                />
                                <vm:inbound-endpoint
                                        path="systemErrorHandler"
                                        transformer-refs="SystemErrorToSystemErrorTransformer"
                                        synchronous="true"
                                        connector-ref="vmConnector"
                                />
                        </inbound>
                </service>

                <service name="healthcheckUMO">
                        <inbound>
                                <http:inbound-endpoint
                                        address="http://localhost:43000/healthcheck"
                                        transformer-refs="HealthCheckRequestToHealthCheckResponse"
                                        responseTransformer-refs="ObjectToDefaultMuleMessage"
                                        synchronous="true"
                                        keep-alive="true"
                                        connector-ref="inHttp"
                                        method="POST"
                                />
                        </inbound>
                </service>

                <service name="smtpUMO">
                        <inbound>
                                <http:inbound-endpoint
                                        address="http://localhost:43000/smtp"
                                        transformer-refs="HttpRequestToAbstractMuleMessage"
                                        responseTransformer-refs="NoneSmtpResponseToHttpResponse ObjectToDefaultMuleMessage"
                                        synchronous="true"
                                        keep-alive="true"
                                        connector-ref="inHttp"
                                        method="POST"
                                /> </inbound>
                        <outbound>
                                <filtering-router>
                                        <smtp:outbound-endpoint
                                                host="localhost"
                                                port="25"
                                                transformer-refs="MuleMessageToMimeTransformer"
                                                synchronous="true"
                                                connector-ref="outSmtp"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.AbstractMuleSmtpMessage"/>
                                </filtering-router>
                                <filtering-router>
                                        <vm:outbound-endpoint path="httpRequestErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                                        <payload-type-filter expectedType="java.lang.Object"/>
                                </filtering-router>
                        </outbound>

                        <default-service-exception-strategy>
                                <vm:outbound-endpoint path="systemErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                        </default-service-exception-strategy>

                </service>

                <service name="chocomUMO">
                        <inbound>
                                <http:inbound-endpoint
                                        address="http://localhost:43000/chocom"
                                        transformer-refs="HttpRequestToAbstractMuleMessage"
                                        responseTransformer-refs="ObjectToDefaultMuleMessage"
                                        synchronous="true"
                                        keep-alive="true"
                                        connector-ref="inHttp"
                                        method="POST"
                                />
                        </inbound>
                        <outbound>
                                <filtering-router>
                                        <https:outbound-endpoint
                                                address="https://www.chocom.net/inq/servlet/E2OShopDecision"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttps"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.chocom.settlement.SettlementReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <https:outbound-endpoint
                                                address="https://www.chocom.net/inq/servlet/E2OShopDecision"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttps"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.chocom.settlement.SettlementResultInquiryReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <https:outbound-endpoint
                                                address="https://www.chocom.net/inq/servlet/E2OBalanceInquiry"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttps"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.chocom.balanceinquiry.BalanceInquiryReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <https:outbound-endpoint
                                                address="https://www.chocom.net/user/servlet/E21PointAccount"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttps"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.chocom.pointaccountestablishment.PointAccountEstablishmentReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <vm:outbound-endpoint path="httpRequestErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                                        <payload-type-filter expectedType="java.lang.Object"/>
                                </filtering-router>
                        </outbound>

                        <default-service-exception-strategy>
                                <vm:outbound-endpoint path="systemErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                        </default-service-exception-strategy>

                </service>

                <service name="remotebillingUMO">
                        <inbound>
                                <http:inbound-endpoint
                                        address="http://localhost:43000/remotebilling"
                                        transformer-refs="HttpRequestToAbstractMuleMessage"
                                        responseTransformer-refs="ObjectToDefaultMuleMessage"
                                        synchronous="true"
                                        keep-alive="true"
                                        connector-ref="inHttp"
                                        method="POST"
                                />
                        </inbound>

                        <outbound>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/m/goodsInfoPreRegist/nomalGoods/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.remotebilling.settlementpreregistration.SettlementPreRegistrationMobileReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/goodsInfoPreRegist/nomalGoods/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.remotebilling.settlementpreregistration.SettlementPreRegistrationReq"/>
                                </filtering-router>
                                <custom-outbound-router class="jp.ne.goo.gbs.extif.routing.outbound.DynamicURIFilteringOutboundRouter">
                                        <https:outbound-endpoint
                                                address="https://gbs_mule/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttps"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.remotebilling.notifysettlement.NotifySettlementResultReq"/>
                                </custom-outbound-router>
                                <custom-outbound-router class="jp.ne.goo.gbs.extif.routing.outbound.DynamicURIFilteringOutboundRouter">
                                        <https:outbound-endpoint
                                                address="https://gbs_mule/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttps"
                                                method="POST"
                                />
                                <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.remotebilling.notifysettlement.NotifySettlementResultFletsReq"/>
                                </custom-outbound-router>
                                <filtering-router>
                                        <vm:outbound-endpoint path="httpRequestErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                                        <payload-type-filter expectedType="java.lang.Object"/>
                                </filtering-router>
                        </outbound>

                        <default-service-exception-strategy>
                                <vm:outbound-endpoint path="systemErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                        </default-service-exception-strategy>

                </service>

                <service name="rightsUMO">
                        <inbound>
                                <http:inbound-endpoint
                                        address="http://localhost:43000/rights"
                                        transformer-refs="HttpRequestToAbstractMuleMessage"
                                        responseTransformer-refs="ObjectToDefaultMuleMessage"
                                        synchronous="true"
                                        keep-alive="true"
                                        connector-ref="inHttp"
                                        method="POST"
                                />
                        </inbound>

                        <outbound>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsRegist/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsRegistReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsUpdate/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsUpdateReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsDelete/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsDeleteReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsPackageCancel/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsPackageCancelReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsInquiryApplyGoods/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsInquiryApplyGoodsReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsInquiryList/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsInquiryListReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsInquiryServiceList/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsInquiryServiceListReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsInquiryPackageList/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsInquiryPackageListReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsInquiryDetail/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsInquiryDetailReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsExtractAutoContinue/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsExtractAutoContinueReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsInquiryNumber/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsInquiryNumberReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsExtractSecede/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsExtractSecedeReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsDrmConfirmLicense/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsDrmConfirmLicenseReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsDrmIssueLicense/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsDrmIssueLicenseReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsDrmLicenseIssueRemain/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsDrmLicenseIssueRemainReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsSerialkeyConfirmStock/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsSerialkeyConfirmStockReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsSerialkeyDelivery/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsSerialkeyDeliveryReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/rightsSerialkeySendMail/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.rights.RightsSerialkeySendMailReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <vm:outbound-endpoint path="httpRequestErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                                        <payload-type-filter expectedType="java.lang.Object"/>
                                </filtering-router>
                        </outbound>

                        <default-service-exception-strategy>
                                <vm:outbound-endpoint path="systemErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                        </default-service-exception-strategy>

                </service>

                <service name="mallUMO">

                        <inbound>
                                <http:inbound-endpoint
                                        address="http://localhost:43000/mall"
                                        transformer-refs="HttpRequestToAbstractMuleMessage"
                                        responseTransformer-refs="ObjectToDefaultMuleMessage"
                                        synchronous="true"
                                        keep-alive="true"
                                        connector-ref="inHttp"
                                        method="POST"
                                />
                        </inbound>

                        <outbound>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/gooFeeRateInquiry/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.fee.GooFeeRateInquiryReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/gbsGoodsInquiry/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.goods.GbsGoodsInquiryReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/packageGoodsInquiry/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.goods.PackageGoodsInquiryListReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/storeInquiry/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.store.StoreInquiryReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/notifySettlement/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.notifysettlement.NotifySettlementReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/bitwayConvertRegist/regist/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.bitway.BitwayConvertRegistReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <http:outbound-endpoint
                                                address="http://{{ gbs_mule_host }}/gbs/bitwayConvertRegist/delete/"
                                                transformer-refs="MuleMessageToByteArray"
                                                responseTransformer-refs="MuleMessageToHttpResponse HttpResponseToAbstractMuleMessage"
                                                synchronous="true"
                                                connector-ref="outHttp"
                                                method="POST"
                                        />
                                        <payload-type-filter expectedType="jp.ne.goo.gbs.extif.message.mall.bitway.BitwayConvertDeleteReq"/>
                                </filtering-router>
                                <filtering-router>
                                        <vm:outbound-endpoint path="httpRequestErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                                        <payload-type-filter expectedType="java.lang.Object"/>
                                </filtering-router>
                        </outbound>

                        <default-service-exception-strategy>
                                <vm:outbound-endpoint path="systemErrorHandler" synchronous="true" connector-ref="vmConnector"/>
                        </default-service-exception-strategy>

                </service>

        </model>
</mule>
