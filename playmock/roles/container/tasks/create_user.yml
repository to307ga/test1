---

# https://docs.redhat.com/ja/documentation/red_hat_enterprise_linux/8/html/building_running_and_managing_containers/proc_setting-up-rootless-containers_assembly_starting-with-containers#proc_setting-up-rootless-containers_assembly_starting-with-containers
# useradd コマンドは、/etc/subuid と /etc/subgid ファイルに、アクセス可能なユーザー ID とグループ ID の範囲を自動的に設定します。
# etc/subuid や /etc/subgid を手動で変更した場合、新しい変更を適用させるために podman system migrate コマンドを実行する必要があります。
# コンテナイメージでの最終的な実行ユーザはuid(1000)gid(1000)で作成されている筈（基本的には唯一作成されるユーザが実行ユーザ）なのでコンテナ実行ユーザ（container_user）のuid・gidを揃えておく
# 揃えておくことでホスト側コンテナ側でのネームスペースの問題を回避する
# puppetでユーザを作成する際には管理者権限を持つユーザを2500番以降、それ以外のユーザは10000以降のuidを付与しているようなので、このユーザをAnsibleで作成しても競合することは無い

- name: create group container_user
  group:
    name:   container_user
    gid:    1000
    state:  present

- name: create user container_user
  user:
    name:   container_user
    uid:    1000
    home:   /opt/containers
    shell: /bin/bash
    state:  present
    group:  container_user
    # subuids: 100000-165535  # Unsupported parameters
    # subgids: 100000-165535

# 冪等性は維持されるのでAnsibleバージョンアップまで暫定対応として以下を使用する (ユーザ作成時に作成されているのでそちらは削除　ログイン前に実行しているので重複しない可能性も 回避する方法もあるが影響範囲が大きいので却下)
- name:  add subuids
  command: usermod --add-subuids 100000-165535 container_user

- name:  add subgids
  command: usermod --add-subgids 100000-165535 container_user

# - name: chmod containers directory
#   file:
#     path:     /opt/containers
#     state:    directory
#     owner:    container_user
#     group:    container_user
#     mode:     0700
#     recurse:  yes

- name: create configuration directory
  file:
    path:     /opt/containers/.config/containers
    state:    directory
    owner:    container_user
    group:    container_user
    mode:     0744
    recurse:  yes

- name: deploy .bashrc
  template:
    src: templates/.bashrc.j2
    dest: /opt/containers/.bashrc
    owner:    container_user
    group:    container_user
    mode:     0644   

- name: deploy .bash_profile
  template:
    src: templates/.bash_profile.j2
    dest: /opt/containers/.bash_profile
    owner:    container_user
    group:    container_user
    mode:     0644   

- name: create user process directory
  file:
    path:     /run/user/1000
    state:    directory
    owner:    container_user
    group:    container_user
    mode:     0700

