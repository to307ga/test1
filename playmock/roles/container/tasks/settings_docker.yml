---

- name: Add an environment to Docker
  blockinfile:
    dest: /etc/systemd/system/multi-user.target.wants/docker.service
    marker: "# {mark} add to Ansible Task"
    insertafter: '^# for containers run by docker'
    content: |
      Environment="GOTRACEBACK=crash"
      Environment="DOCKER_HTTP_HOST_COMPAT=1"
      Environment="DOCKER_BUILDKIT=0"
      Environment="COMPOSE_DOCKER_CLI_BUILD=0"
      # Environment="HTTP_PROXY={{ proxy_env.docker_proxy }}"
      Environment="HTTP_PROXY={{ proxy_env.http_proxy }}"
      # Environment="HTTPS_PROXY={{ proxy_env.docker_proxy }}"
      Environment="HTTPS_PROXY={{ proxy_env.https_proxy }}"
      Environment="NO_PROXY=localhost,127.0.0.1"
      # Environment="DOCKER_NETWORK_OPTIONS=--dns 8.8.8.8"
  notify: Restart docker  
  when: not ansible_check_mode

- name: Define the users and groups required for dood in Docker
  blockinfile:
    dest: /etc/systemd/system/multi-user.target.wants/docker.service
    marker: "# {mark} add to Ansible Task2"
    insertafter: '^OOMScoreAdjus'
    content: |
      User=root
      Group=docker
  notify: Restart docker
  when: not ansible_check_mode

- name: Prevention of rewriting by NetworkManager
  blockinfile:
    dest: /etc/NetworkManager/NetworkManager.conf
    marker: "# {mark} add to Ansible Task"
    insertafter: '^#plugins=ifcfg-rh,ibft'
    content: dns=none
  notify: Restart NetworkManager

- name: Create docker_container directory (project root)
  file:
    path:     /opt/docker_container/
    state:    directory
    owner:    "1000"
    group:    "1000"
    mode:     0644
    recurse:  yes

- name: 各プロジェクト用フォルダ作成
  file:
    path: "/opt/docker_container/{{ item }}"
    state: directory
    owner: "1000"
    group: "1000"
    mode:  0644
  loop:
    - kibana
