<VirtualHost *:443>
    DocumentRoot "/var/www/html/" 
    ServerName {{ item.0.servername }}:443

    SSLEngine on
    SSLProtocol -ALL +TLSv1.2
    SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256
    SSLHonorCipherOrder Off

    SSLCertificateFile /etc/letsencrypt/live/{{ item.0.servername }}/cert.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/{{ item.0.servername }}/privkey.pem
    SSLCertificateChainFile /etc/letsencrypt/live/{{ item.0.servername }}/chain.pem

    SSLProxyEngine on
    ProxyRequests off
    ProxyPreserveHost on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off
    SSLProxyCheckPeerExpire off

    RequestHeader set X-Forwarded-Proto https

{% if item.0.servername is regex("^gooid.wbo") %}
    # （親切リダイレクト）"/" (root) は ヘルプツールのTopへ
    RedirectMatch permanent ^/$ /g_help/apl/member/HelpStart

    AddOutputFilterByType SUBSTITUTE text/html
    Substitute "s/<title>/<title>【検証環境】/i"
{% elif item.0.servername is regex("^idhub.wbo") %}
    # （親切リダイレクト）"/" (root) は ヘルプツールのTopへ
    RedirectMatch permanent ^/$ /d_help/apl/visitor/login
{% endif %}

    <Location />
        <RequireAny>
{% if item.0.enable_mfa | default(false) %}
{# (MFAを有効にする場合は、以下の設定を有効にします #}
            AuthName "User / (Password+NNNNNN)"
            AuthType Basic
            AuthBasicProvider OTP
            Require valid-user

            {#- フルパスでないと動作しないのかもしれない +#}
            AuthUserFile /etc/httpd/otp/users.pin
            OTPAuthUsersFile /etc/httpd/otp/users.token
            OTPAuthPINAuthProvider file
            # 6 hours
            OTPAuthMaxLinger 21600
            # アクセス元IPが変わっても認証状態を有効
            OTPAuthLogoutOnIPChange Off
{% endif %}

            Include conf/{{ item.0.acl }}
        </RequireAny>

{% if item.0.servername is regex("^ticket.id001.") %}
        # Gold Zone からはPOSTメソッドによる書き込みを禁止します。 （ただし /login /logout 以外）

        RewriteEngine On
        # /login は影響を受けない
        RewriteCond %{REQUEST_URI} !^/login$
        RewriteCond %{REQUEST_URI} !^/logout$

        # リクエストが POST かつ IP が Gold Zone の場合は拒否
        RewriteCond %{REQUEST_METHOD} POST
        RewriteCond %{REMOTE_ADDR} ^202\.217\.74\.167$
        RewriteRule .* - [F]
{% endif %}
    </Location>

{% if item.0.servername is regex("^lin") %}
    #shopify基盤からwebhookへのアクセスを受け入れる必要があり
    #shopify基盤ではアクセス元IPアドレスを固定できないため全IPを許可する
    <Location /id/shopify/webhook/>
        <If "%{HTTP:X-Shopify-Topic} =~ /.+/ && %{HTTP:X-Shopify-Hmac-Sha256} =~ /.+/ && %{HTTP:X-Shopify-Shop-Domain} =~ /.+/ && %{HTTP:X-Shopify-API-Version} =~ /.+/">
           SetEnvIf X-Shopify-Topic .+ access_ok
        </If>
        Require all denied
        Require env access_ok
    </Location>
{% endif %}

{# Only for "contanier" #}
{% if item.0.servername is regex("^container\.") %}
    # Jenkins
    <Location /ci>
    RequestHeader unset Authorization
    ProxyPass http://gooid-21-dev-container-101:8080/ci nocanon
    ProxyPassReverse http://gooid-21-dev-container-101:8080/ci
    </Location>

    # Redmine
    <Location /ticket>
        ProxyPass http://gooid-21-dev-container-101:3000/ticket nocanon
        ProxyPassReverse http://gooid-21-dev-container-101:3000/ticket
    </Location>

    # Gitea
    <Location /repo>
        ProxyPass http://gooid-21-dev-container-101:3001
    </Location>
{# Default #}
{% else %}
    ProxyPass / {{ item.1 }}
    ProxyPassReverse / {{ item.1 }}
{% endif %}

</VirtualHost>
