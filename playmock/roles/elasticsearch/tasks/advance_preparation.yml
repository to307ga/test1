---

# IPが一つしか設定されてないならこっちの方が確実
# - name: "dump variables hostvars"
  # debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']

 # eth とか使ってない場合があるので事前に確認が必要 （複数のIFを持っていてどちらかを明示的に使いたい場合）
# - name: "dump variables hostvars"
  # debug: var=ansible_facts.eth1.ipv4.address

- name: set_fact elastic_ip_address (dev)
  set_fact:
    elastic_ip_address: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  when: release_env == "dev"

- name: set_fact elastic_ip_address (pro)
  set_fact:
    elastic_ip_address: "{{ ansible_facts.eth1.ipv4.address }}"
  when: release_env == "pro"

# - debug: var=elastic_ip_address

- name: set_fact hostname and ip
  set_fact:
    es_host:
      hostname: "{{ item }}"
      ip: "{{ hostvars[item]['elastic_ip_address'] }}"
  with_items: "{{ groups['elasticsearch_master'] }}"
  register: es_hosts

# - debug: var=es_hosts

- name: set_fact es_hosts
  set_fact:
    es_hosts: "{{ es_hosts.results | map(attribute='ansible_facts.es_host') | list }}"

# - debug: var=es_hosts

- name: Add Elasticsearch cluster entries to /etc/hosts
  lineinfile:
    path: "/etc/hosts"
    regexp: ".*\\s+{{ item.hostname }}"
    line: "{{ item.ip }}\t{{ item.hostname }}"
    state: present
    backup: yes
  with_items: "{{ es_hosts }}"

- name: Install utils
  ansible.builtin.package:
    name: 
      - jq
      - curl
      - unzip
      - perl-Digest-SHA
    state: present
    update_cache: yes    

# firewall is not currently running
#- name: Firewalld setting
#  firewalld:
#    zone: public
#    port: "{{ item }}"
#    state: enabled
#    permanent: yes
#    immediate: yes
#  loop:
#    - 9200/tcp
#    - 9300/tcp

- name: Set vm.max_map_count value
  sysctl:
    name: vm.max_map_count
    value: '262144'
    sysctl_set: yes
    state: present
    reload: yes

- name: setup ulimit
  pam_limits:
    domain: "{{ item.domain }}"
    limit_type: "{{ item.limit_type }}"
    limit_item: nofile
    value: "655360"
  loop: "{{ulimit_settings}}"

