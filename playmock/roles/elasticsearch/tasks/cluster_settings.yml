---

- name: CA exists
  stat:
    path: "{{ es_certs_dir}}/{{ es_ca_filename }}"
  register: ca_file

- name: Copy CA
  copy:
    src: "{{ es_local_certs_dir }}/{{ es_ca_filename }}"
    dest: "{{ es_certs_dir }}/{{ es_ca_filename }}"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: 0644
  when: not ca_file.stat.exists and not ansible_check_mode
  notify: Restart elasticsearch

- name: Cert exists
  stat:
    path: "{{ es_certs_dir}}/{{ es_cert_filename }}"
  register: cert_file

- name: Copy cert
  copy:
    src: "{{ es_local_certs_dir }}/{{ es_cert_filename }}"
    dest: "{{ es_certs_dir }}/{{ es_cert_filename }}"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: 0640
  when: not cert_file.stat.exists and not ansible_check_mode
  notify: Restart elasticsearch

# elasticsearch.yml の配置

- name: Set fact IP (es_subnet is not defined)
  set_fact:
    elastic_ip_address: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

# - name: Set interface
  # set_fact:
    # elastic_iface: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['interface'] }}"

- name: Copy elasticsearch.yml
  template:
    src: elasticsearch.yml.j2
    dest: "{{ es_conf_dir }}/elasticsearch.yml"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: 0644

- name: Copy JVM.options
  template:
    src: jvm.options.j2
    dest: "{{ es_conf_dir }}/jvm.options"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: 0644

- name: Copy log4j.properties
  copy:
    src: log4j2.properties
    dest: "{{ es_conf_dir }}/log4j2.properties"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: 0644

- name: Start and enabled elasticsearch
  systemd:
    name: elasticsearch 
    state: started 
    enabled: yes
  when: not ansible_check_mode

- name: Copy elastic_answer_file
  template:
    src: elastic_answer_file.j2
    dest: /tmp/elastic_answer_file
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: 0644

- name: Initialize password for elastic user
  shell: 
    executable: "/bin/bash"
    cmd: cat /tmp/elastic_answer_file | /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic -i
  when: not ansible_check_mode

- name: Remove elastic_answer_file file
  file:
    path: /tmp/elastic_answer_file
    state: absent

- name: Confirmation of elasticsearches start-up
  uri:
    url: "https://localhost:9200"
    status_code: 200
    user: elastic
    password: "{{ es_api_basic_auth_password }}"
    method: GET
    force_basic_auth: yes
    validate_certs: no
  register: result
  until: result.status == 200
  retries: 30
  delay: 20
  when: not ansible_check_mode
