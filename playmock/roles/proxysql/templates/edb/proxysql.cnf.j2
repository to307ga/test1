datadir="/var/lib/proxysql"
errorlog="/var/lib/proxysql/proxysql.log"

admin_variables=
{
        admin_credentials="admin:admin"
        mysql_ifaces="0.0.0.0:6032"
        debug=true
}

mysql_variables=
{
        threads=4
        max_connections=2048
        default_query_delay=0
        default_query_timeout=36000000
        have_compress=true
        poll_timeout=2000
        interfaces="0.0.0.0:6033;0.0.0.0:6034;0.0.0.0:6133;0.0.0.0:6134"
        default_schema="information_schema"
        stacksize=1048576
        server_version="5.5.30"
        connect_timeout_server=3000
        monitor_username="{{ mysql_monitor_name }}"
        monitor_password="{{ mysql_monitor_password }}"
        monitor_history=600000
        monitor_connect_interval=60000
        monitor_ping_interval=10000
        monitor_read_only_interval=1500
        monitor_read_only_timeout=500
        ping_interval_server_msec=120000
        ping_timeout_server=500
        commands_stats=true
        sessions_sort=true
        connect_retries_on_failure=10
}

{# サービスDBノードが1台かどうか、boolean変数へ格納 #}
{%
        set is_service_db_standalone = true if edb_proxysql.service.nodes | length <=1 else false
%}
# Galera Configuration - ProxySQL
# https://proxysql.com/documentation/galera-configuration/
#
# IDC DB (Service DB)
#
mysql_galera_hostgroups =
(
        {
                # writer_is_also_reader=0 なのでwriterはreaderには成れません。
                writer_is_also_reader=0
                # 書き込み用ノードが所属するグループID
                writer_hostgroup=10
                # 書き込み用待機ノードが所属するグループID
                backup_writer_hostgroup=20
                # 読み込み用ノードが所属するグループID
{% if is_service_db_standalone %}
                # （スタンドアローンであるため無効にします。）
                ###reader_hostgroup=30
{% else %}
                reader_hostgroup=30
{% endif %}
                # 「故障者リスト」が所属するグループID
                offline_hostgroup=9999
                # 書き込み用ノード数の最大数。
                max_writers=1

                max_transactions_behind=30
                active=1
        }
)

{# 退避DBノードが1台かどうか、boolean変数へ格納 #}
{%
        set is_archive_db_standalone = true if edb_proxysql.archive.nodes | length <=1 else false
%}
# Archive DB (edb)
# 注意： edb はGalera Cluster じゃないので、mysql_galera_hostgroups ではなく mysql_replication_hostgroups を指定します
mysql_replication_hostgroups =
(
        {
                writer_hostgroup=110
                backup_writer_hostgroup=120
{% if is_archive_db_standalone %}
                # （スタンドアローンであるため無効にします。）
                ###reader_hostgroup=130
{% else %}
                reader_hostgroup=130
{% endif %}
                offline_hostgroup=9999
                max_writers=1
                writer_is_also_reader=0
                max_transactions_behind=30
                active=1
        }
)

mysql_users:
(
        { username = "{{ mysql_admin_name }}", password = "{{ mysql_admin_password }}", transaction_persistent = 0, active = 1 },
        { username = "{{ mysql_maintainer_name }}", password = "{{ mysql_maintainer_password }}", transaction_persistent = 0, active = 1 },
        { username = "{{ mysql_reader_name }}", password = "{{ mysql_reader_password }}", transaction_persistent = 0, active = 1 },
        { username = "{{ mysql_writer_name }}", password = "{{ mysql_writer_password }}", transaction_persistent = 0, active = 1 },
        { username = "{{ mysql_monitor_name }}", password = "{{ mysql_monitor_password }}", transaction_persistent = 0, active = 1 },
)

# hostgroup=10 が(writer)で、weightが高い順に選ばれます。
mysql_servers =
(
        # Archive DB (edb)
        { hostgroup=110, address="{{ edb_proxysql.archive.nodes[0] }}", port=3306, weight=1003 },
        {% if edb_proxysql.archive.nodes[1] is not defined %}###{% endif %}{ hostgroup=130, address="{{ edb_proxysql.archive.nodes[1] | default('(2nd node is not defined)') }}", port=3306 },

        # IDC DB (Service DB)
        { hostgroup=10, address="{{ edb_proxysql.service.nodes[0] }}", port=3306, weight=1003 },
        {% if edb_proxysql.service.nodes[1] is not defined %}###{% endif %}{ hostgroup=10, address="{{ edb_proxysql.service.nodes[1] | default('(2nd node is not defined)') }}", port=3306, weight=1002 },
        {% if edb_proxysql.service.nodes[2] is not defined %}###{% endif %}{ hostgroup=10, address="{{ edb_proxysql.service.nodes[2] | default('(3rd node is not defined)') }}", port=3306, weight=1001 },
        {% if edb_proxysql.service.nodes[3] is not defined %}###{% endif %}{ hostgroup=30, address="{{ edb_proxysql.service.nodes[3] | default('(4th node is not defined)') }}", port=3306 },
        {% if edb_proxysql.service.nodes[4] is not defined %}###{% endif %}{ hostgroup=30, address="{{ edb_proxysql.service.nodes[4] | default('(5th node is not defined)') }}", port=3306 },
)

mysql_query_rules:
(
        # IDC DB (Service DB) for read
        {
                rule_id=100
                active=1
                proxy_port=6033
{% if is_service_db_standalone %}
                # スタンドアローンの場合、参照用エンドポイントとして port:6033 も解放
                ###destination_hostgroup=30
                destination_hostgroup=10
{% else %}
                destination_hostgroup=30
{% endif %}
                apply=1
        },

        # IDC DB (Service DB) for write
        {
                rule_id=200
                active=1
                proxy_port=6034
                destination_hostgroup=10
                apply=1
        },

        # Archive DB (edb) for read
        {
                rule_id=1100
                active=1
                proxy_port=6133
{% if is_archive_db_standalone %}
                # スタンドアローンの場合、参照用エンドポイントとして port:6133 も解放
                ###destination_hostgroup=130
                destination_hostgroup=110
{% else %}
                destination_hostgroup=130
{% endif %}
                apply=1
        },

        # Archive DB (edb) for write
        {
                rule_id=1200
                active=1
                proxy_port=6134
                destination_hostgroup=110
                apply=1
        }
)
