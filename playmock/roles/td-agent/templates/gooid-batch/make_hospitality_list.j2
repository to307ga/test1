<worker {{td_agent_worker2}}>
  <filter gooid*batch*.var.log.app.idc.make_hospitality_list.log>
    @type record_transformer
    enable_ruby
    <record>
      host_groups_name ${tag_parts[0].split(/-[0-9]{3}$/)[0]}
    </record>
    <buffer tag>
    </buffer>
  </filter>
  
  <match gooid*batch*.var.log.app.idc.make_hospitality_list.log>
    @type                   forest
    subtype                 copy
    <template>
      <store>
        @type               file
        format              single_value
        append              true
        buffer_path         /db0/tdlogs/buffer/${tag} 
        path                /db0/tdlogs/${tag_parts[0]}/${tag_parts[1..-3]}/${tag_parts[-2]}
        time_slice_format   %Y-%m-%d
        time_slice_wait     10m  
        buffer_chunk_limit  512m
        flush_mode          interval
        flush_interval      {{ gzip_flush_interval }}
        flush_at_shutdown   true
        compress            gzip
      </store>
      <store>
        @type               rewrite_tag_filter
        <rule>
          key               host_groups_name
          pattern           /(goo.*|id.*)$/
          tag               gooid-batch-idc_make_hospitality_list.$1.${tag}
        </rule>
      </store>
    </template>
  </match>

  <filter gooid-batch-idc_make_hospitality_list.**>
    @type                   concat
    flush_interval          30m
    timeout_label           @TIMEOUT_gooid-batch-idc_make_hospitality_list
    key                     message
    separator               "### NEW LINE ###"
    multiline_start_regexp  /^\d{4}/\d{1,2}/\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}.\d{3}/
  </filter>

  <match gooid-batch-idc_make_hospitality_list.**>
    @type                   rewrite_tag_filter
    <rule>
      key                   host_groups_name
      pattern               /.+/
      tag                   merged.${tag}
    </rule>
  </match>

  # parsed_logに全て格納する
  <filter merged.gooid-batch-idc_make_hospitality_list.**>
    @type                   parser
    key_name                message
    <parse>
      @type                 regexp
      time_format           %Y/%m/%d %H:%M:%S,%L
      expression            /(?<parsed_log>.+)/
      keep_time_key         true
    </parse>
  </filter>


  # マージ用のログにホスト名を付ける
  <filter merged.gooid-batch-idc_make_hospitality_list.**>
    @type                   record_transformer
    <record>
      hostname              ${tag_parts[3]}
    </record>
    <buffer tag>
    </buffer>
  </filter>


  <match merged.gooid-batch-idc_make_hospitality_list.**>
    @type                   forest
    subtype                 file
    <template>
      format                hostname_and_message
      append                true
      path                  /db0/tdlogs/merged/${tag_parts[2]}/${tag_parts[4..-3]}/${tag_parts[-2]}
      # path はほとんど上記であっているが違う場合もあるので下にある既存部分を確認する
      time_slice_format     %Y-%m-%d
      buffer_path           /db0/tdlogs/merge-buffer/${tag}
      buffer_chunk_limit    512m
      flush_mode            interval
      flush_interval        {{ merged_flush_interval }}
      flush_at_shutdown     true
    </template>
  </match>

  <match merged.gooid-batch-idc_make_hospitality_list.**>
    @type null
  </match>
  
  <label @TIMEOUT_gooid-batch-idc_make_hospitality_list>
    <match gooid-batch-idc_make_hospitality_list.**>
      @type                 rewrite_tag_filter
      <rule>
        key                 host_groups_name
        pattern             /.+/
        tag                 merged.${tag}
      </rule>
      @label                @labeled_gooid-batch-idc_make_hospitality_list
    </match>
  </label>

  <label @labeled_gooid-batch-idc_make_hospitality_list>
    <filter>
      @type                   parser
      key_name                message
      <parse>
        @type                 regexp
        time_format           %Y/%m/%d %H:%M:%S,%L
        expression            /(?<parsed_log>.+)/
        keep_time_key         true
      </parse>
    </filter>

    <filter>
      @type                   record_transformer
      <record>
        hostname              ${tag_parts[3]}
      </record>
      <buffer tag>
      </buffer>
    </filter>

    <match merged.gooid-batch-idc_make_hospitality_list.**>
      @type                   forest
      subtype                 file
      <template>
        format                hostname_and_message
        append                true
        path                  /db0/tdlogs/merged/${tag_parts[2]}/${tag_parts[4..-3]}/${tag_parts[-2]}
        time_slice_format     %Y-%m-%d
        buffer_path           /db0/tdlogs/timeout-buffer/${tag}
        buffer_chunk_limit    512m
        flush_mode            interval
        flush_interval        10s
        flush_at_shutdown     true
      </template>
    </match>
  </label>
</worker>
