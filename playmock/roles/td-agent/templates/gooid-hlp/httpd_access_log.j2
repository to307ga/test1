<worker {{td_agent_worker2}}>
  <filter goo*hlp*.var.log.httpd.access_log.**>
    @type record_transformer
    enable_ruby
    <record>
      host_groups_name ${tag_parts[0].split(/-[0-9]{3}$/)[0]}
    </record>
    <buffer tag>
    </buffer>
  </filter>
  
  <match goo*hlp*.var.log.httpd.access_log.**>
    @type                   copy
    <store ignore_error>
      @type               forest
      subtype             file
      <template>
        format              single_value
        append              true
        buffer_path         /db0/tdlogs/buffer/${tag} 
        path                /db0/tdlogs/${tag_parts[0]}/${tag_parts[1..-3]}/${tag_parts[-2]}
        time_slice_format   %Y-%m-%d
        time_slice_wait     1m  
        buffer_chunk_limit  512m
        flush_mode          interval
        flush_interval      {{ gzip_flush_interval }}
        flush_at_shutdown   true
        compress            gzip
      </template>
    </store>
    <store ignore_error>
      @type               rewrite_tag_filter
      <rule>
        key               host_groups_name
        pattern           /(goo.*|id.*)$/
        tag               gooid-hlp_httpd_access.$1.${tag}
      </rule>
    </store>
  </match>

  <filter gooid-hlp_httpd_access.**>
    @type                   concat
    flush_interval          0
    key                     message
    separator               "### NEW LINE ###"
    multiline_start_regexp  /^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/
  </filter>

  ###マージログを優先処理するため変更###
  <match gooid-hlp_httpd_access.**>
    @type                   rewrite_tag_filter
    <rule>
      key                   host_groups_name
      pattern               /.+/
      tag                   merged.${tag}
    </rule>
  </match>

  # parsed_logに全て格納する
  <filter merged.gooid-hlp_httpd_access.**>
    @type                   parser
    key_name                message
    <parse>
      @type                 regexp
      time_format           %d/%b/%Y:%H:%M:%S %z
      expression            /(?<parsed_log>.+)/
      keep_time_key         true
    </parse>
  </filter>


  # マージ用のログにホスト名を付ける
  <filter merged.gooid-hlp_httpd_access.**>
    @type                   record_transformer
    <record>
      hostname              ${tag_parts[3]}
    </record>
    <buffer tag>
    </buffer>
  </filter>


  <match merged.gooid-hlp_httpd_access.**>
    @type                   forest
    subtype                 file
    <template>
      format                hostname_and_message
      append                true
      path                  /db0/tdlogs/merged/${tag_parts[2]}/${tag_parts[4..-3]}/${tag_parts[-2]}
      # path はほとんど上記であっているが違う場合もあるので下にある既存部分を確認する
      time_slice_format     %Y-%m-%d
      buffer_path           /db0/tdlogs/merge-buffer/${tag}
      buffer_chunk_limit    512m
      flush_mode            interval
      flush_interval        {{ merged_flush_interval }}
      flush_at_shutdown     true
    </template>
  </match>

  <match merged.gooid-hlp_httpd_access.**>
    @type null
  </match>
</worker>
