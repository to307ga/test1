AWSTemplateFormatVersion: '2010-09-09'
Description: 'Security and IAM for AWS SES Migration with Personal Information Protection and Access Control - Tokyo Region (ap-northeast-1)'

Parameters:
  DomainName:
    Type: String
    Description: Domain name for SES configuration
    Default: goo.ne.jp

  Environment:
    Type: String
    Description: Environment name
    Default: production

  ProjectCode:
    Type: String
    Description: Project code for resource naming
    Default: ses-migration

  AllowedIPRanges:
    Type: CommaDelimitedList
    Description: Allowed IP address ranges for access control
    Default: "10.0.0.0/8,192.168.1.0/24"

  EnableIAMGroups:
    Type: String
    Description: Enable IAM groups creation
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableIAMUsers:
    Type: String
    Description: Enable IAM users creation
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableIAMPolicies:
    Type: String
    Description: Enable IAM policies creation
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableAccessControl:
    Type: String
    Description: Enable access control functionality
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableIPRestriction:
    Type: String
    Description: Enable IP restriction functionality
    Default: "true"
    AllowedValues: ["true", "false"]

  EnablePersonalInformationProtection:
    Type: String
    Description: Enable personal information protection and masking
    Default: "true"
    AllowedValues: ["true", "false"]

  AdminUsername:
    Type: String
    Description: Admin username
    Default: "production-admin"

  ReadonlyUsername:
    Type: String
    Description: Readonly username
    Default: "production-readonly"

  MonitoringUsername:
    Type: String
    Description: Monitoring username
    Default: "production-monitoring"

  AdminEmail:
    Type: String
    Description: Admin user email address
    Default: "admin@goo.ne.jp"

  ReadonlyEmail:
    Type: String
    Description: Readonly user email address
    Default: "readonly@goo.ne.jp"

  MonitoringEmail:
    Type: String
    Description: Monitoring user email address
    Default: "monitoring@goo.ne.jp"

  AdminPhone:
    Type: String
    Description: Admin user phone number (E.164 format)
    Default: "+81901234567"

  ReadonlyPhone:
    Type: String
    Description: Readonly user phone number (E.164 format)
    Default: "+81901234568"

  MonitoringPhone:
    Type: String
    Description: Monitoring user phone number (E.164 format)
    Default: "+81901234569"

  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch Logs retention period in days
    Default: 90
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 2555]

  DataMaskingFunctionArn:
    Type: String
    Description: Data masking Lambda function ARN (imported from monitoring stack)

  AdminQueryDefinitionName:
    Type: String
    Description: Admin CloudWatch Insights query name (imported from monitoring stack)

  MaskedQueryDefinitionName:
    Type: String
    Description: Masked CloudWatch Insights query name (imported from monitoring stack)

  EnableTokyoRegionFeatures:
    Type: String
    Description: Enable Tokyo region specific features
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableJapaneseCompliance:
    Type: String
    Description: Enable Japanese compliance features
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableJapaneseSecurity:
    Type: String
    Description: Enable Japanese security features
    Default: "true"
    AllowedValues: ["true", "false"]

  EnableTokyoRegionSecurity:
    Type: String
    Description: Enable Tokyo region specific security features
    Default: "true"
    AllowedValues: ["true", "false"]

Conditions:
  EnableIAMGroupsCondition: !Equals [!Ref EnableIAMGroups, "true"]
  EnableIAMUsersCondition: !Equals [!Ref EnableIAMUsers, "true"]
  EnableIAMPoliciesCondition: !Equals [!Ref EnableIAMPolicies, "true"]
  EnableAccessControlCondition: !Equals [!Ref EnableAccessControl, "true"]
  EnableIPRestrictionCondition: !Equals [!Ref EnableIPRestriction, "true"]
  EnablePersonalInformationProtectionCondition: !Equals [!Ref EnablePersonalInformationProtection, "true"]
  EnableTokyoRegionFeaturesCondition: !Equals [!Ref EnableTokyoRegionFeatures, "true"]
  EnableJapaneseComplianceCondition: !Equals [!Ref EnableJapaneseCompliance, "true"]
  EnableJapaneseSecurityCondition: !Equals [!Ref EnableJapaneseSecurity, "true"]
  EnableTokyoRegionSecurityCondition: !Equals [!Ref EnableTokyoRegionSecurity, "true"]

Resources:
  # IAM Group for Admin Users
  SESAdminGroup:
    Type: AWS::IAM::Group
    Condition: EnableIAMGroupsCondition
    Properties:
      GroupName: !Sub "${ProjectCode}-${Environment}-admin"
      Path: "/"
      Policies:
        - PolicyName: SESAdminPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:*
                  - cloudwatch:*
                  - logs:*
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - firehose:*
                  - sns:*
                  - lambda:InvokeFunction
                Resource: '*'
                Condition: !If
                  - EnableIPRestrictionCondition
                  - IpAddress:
                      aws:SourceIp: !Ref AllowedIPRanges
                  - !Ref "AWS::NoValue"
              - Effect: Allow
                Action:
                  - iam:GetUser
                  - iam:GetGroup
                  - iam:GetRole
                  - iam:GetPolicy
                  - iam:ListUsers
                  - iam:ListGroups
                  - iam:ListRoles
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:StartQuery
                  - logs:StopQuery
                  - logs:GetQueryResults
                Resource: '*'
                Condition: !If
                  - EnablePersonalInformationProtectionCondition
                  - StringEquals:
                      logs:QueryDefinitionName: !Ref AdminQueryDefinitionName
                    IpAddress:
                      aws:SourceIp: !Ref AllowedIPRanges
                  - !Ref "AWS::NoValue"


  # IAM Group for ReadOnly Users
  SESReadOnlyGroup:
    Type: AWS::IAM::Group
    Condition: EnableIAMGroupsCondition
    Properties:
      GroupName: !Sub "${ProjectCode}-${Environment}-readonly"
      Path: "/"
      Policies:
        - PolicyName: SESReadOnlyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:GetSendStatistics
                  - ses:GetSendQuota
                  - ses:GetIdentityVerificationAttributes
                  - ses:GetIdentityDkimAttributes
                  - ses:GetIdentityNotificationAttributes
                  - ses:ListIdentities
                  - ses:ListVerifiedEmailAddresses
                  - cloudwatch:GetMetricStatistics
                  - cloudwatch:ListMetrics
                  - cloudwatch:DescribeAlarms
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - s3:GetObject
                  - s3:ListBucket
                  - firehose:DescribeDeliveryStream
                  - sns:ListTopics
                  - sns:GetTopicAttributes
                Resource: '*'
                Condition: !If
                  - EnableIPRestrictionCondition
                  - IpAddress:
                      aws:SourceIp: !Ref AllowedIPRanges
                  - !Ref "AWS::NoValue"
              - Effect: Allow
                Action:
                  - logs:StartQuery
                  - logs:StopQuery
                  - logs:GetQueryResults
                Resource: '*'
                Condition: !If
                  - EnablePersonalInformationProtectionCondition
                  - StringEquals:
                      logs:QueryDefinitionName: !Ref MaskedQueryDefinitionName
                    IpAddress:
                      aws:SourceIp: !Ref AllowedIPRanges
                  - !Ref "AWS::NoValue"


  # IAM Group for Monitoring Users
  SESMonitoringGroup:
    Type: AWS::IAM::Group
    Condition: EnableIAMGroupsCondition
    Properties:
      GroupName: !Sub "${ProjectCode}-${Environment}-monitoring"
      Path: "/"
      Policies:
        - PolicyName: SESMonitoringPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:GetSendStatistics
                  - ses:GetSendQuota
                  - ses:GetIdentityVerificationAttributes
                  - ses:GetIdentityDkimAttributes
                  - ses:GetIdentityNotificationAttributes
                  - ses:ListIdentities
                  - ses:ListVerifiedEmailAddresses
                  - cloudwatch:*
                  - logs:*
                  - s3:GetObject
                  - s3:ListBucket
                  - firehose:DescribeDeliveryStream
                  - sns:ListTopics
                  - sns:GetTopicAttributes
                  - lambda:InvokeFunction
                Resource: '*'
                Condition: !If
                  - EnableIPRestrictionCondition
                  - IpAddress:
                      aws:SourceIp: !Ref AllowedIPRanges
                  - !Ref "AWS::NoValue"
              - Effect: Allow
                Action:
                  - logs:StartQuery
                  - logs:StopQuery
                  - logs:GetQueryResults
                Resource: '*'
                Condition: !If
                  - EnablePersonalInformationProtectionCondition
                  - StringEquals:
                      logs:QueryDefinitionName: !Ref MaskedQueryDefinitionName
                    IpAddress:
                      aws:SourceIp: !Ref AllowedIPRanges
                  - !Ref "AWS::NoValue"


  # IAM User for Admin
  SESAdminUser:
    Type: AWS::IAM::User
    Condition: EnableIAMUsersCondition
    Properties:
      UserName: !Ref AdminUsername
      Path: "/"
      Groups:
        - !Ref SESAdminGroup
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-admin-user"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Role
          Value: "admin"
        - Key: Email
          Value: !Ref AdminEmail
        - Key: Phone
          Value: !Ref AdminPhone
        - Key: Region
          Value: "ap-northeast-1"

  # IAM User for ReadOnly
  SESReadOnlyUser:
    Type: AWS::IAM::User
    Condition: EnableIAMUsersCondition
    Properties:
      UserName: !Ref ReadonlyUsername
      Path: "/"
      Groups:
        - !Ref SESReadOnlyGroup
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-readonly-user"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Role
          Value: "readonly"
        - Key: Email
          Value: !Ref ReadonlyEmail
        - Key: Phone
          Value: !Ref ReadonlyPhone
        - Key: Region
          Value: "ap-northeast-1"

  # IAM User for Monitoring
  SESMonitoringUser:
    Type: AWS::IAM::User
    Condition: EnableIAMUsersCondition
    Properties:
      UserName: !Ref MonitoringUsername
      Path: "/"
      Groups:
        - !Ref SESMonitoringGroup
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-monitoring-user"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Role
          Value: "monitoring"
        - Key: Email
          Value: !Ref MonitoringEmail
        - Key: Phone
          Value: !Ref MonitoringPhone
        - Key: Region
          Value: "ap-northeast-1"

  # IAM Policy for Personal Information Protection
  PersonalInformationProtectionPolicy:
    Type: AWS::IAM::Policy
    Condition: EnableIAMPoliciesCondition
    Properties:
      PolicyName: !Sub "${ProjectCode}-${Environment}-personal-information-protection"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: !If
              - EnablePersonalInformationProtectionCondition
              - !Ref DataMaskingFunctionArn
              - "*"
            Condition: !If
              - EnableIPRestrictionCondition
              - IpAddress:
                  aws:SourceIp: !Ref AllowedIPRanges
              - !Ref "AWS::NoValue"
      Groups:
        - !Ref SESReadOnlyGroup
        - !Ref SESMonitoringGroup


  # IAM Policy for IP Restriction
  IPRestrictionPolicy:
    Type: AWS::IAM::Policy
    Condition: EnableIAMPoliciesCondition
    Properties:
      PolicyName: !Sub "${ProjectCode}-${Environment}-ip-restriction"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Action: "*"
            Resource: "*"
            Condition: !If
              - EnableIPRestrictionCondition
              - NotIpAddress:
                  aws:SourceIp: !Ref AllowedIPRanges
              - !Ref "AWS::NoValue"
      Groups:
        - !Ref SESAdminGroup
        - !Ref SESReadOnlyGroup
        - !Ref SESMonitoringGroup


  # IAM Policy for SES IP Restriction
  SESIPRestrictionPolicy:
    Type: AWS::IAM::Policy
    Condition: EnableIPRestrictionCondition
    Properties:
      PolicyName: !Sub "${ProjectCode}-${Environment}-ses-ip-restriction"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSpecificIPs
            Effect: Allow
            Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Resource: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${DomainName}"
            Condition:
              IpAddress:
                aws:SourceIp: !Ref AllowedIPRanges
          - Sid: DenyAllOtherIPs
            Effect: Deny
            Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Resource: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${DomainName}"
            Condition:
              NotIpAddress:
                aws:SourceIp: !Ref AllowedIPRanges
      Groups:
        - !Ref SESAdminGroup
        - !Ref SESReadOnlyGroup

  # CloudWatch Log Group for Security Events
  SecurityLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: EnableAccessControlCondition
    Properties:
      LogGroupName: !Sub "/aws/security/${ProjectCode}/${Environment}"
      RetentionInDays: !Ref CloudWatchLogRetentionDays
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-security-logs"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Region
          Value: "ap-northeast-1"

  # CloudWatch Log Stream for Security Events
  SecurityLogStream:
    Type: AWS::Logs::LogStream
    Condition: EnableAccessControlCondition
    Properties:
      LogGroupName: !Ref SecurityLogGroup
      LogStreamName: !Sub "${ProjectCode}-${Environment}-security-stream"

  # CloudWatch Metric Filter for Security Events
  SecurityEventMetricFilter:
    Type: AWS::Logs::MetricFilter
    Condition: EnableAccessControlCondition
    Properties:
      LogGroupName: !Ref SecurityLogGroup
      FilterName: !Sub "${ProjectCode}-${Environment}-security-events"
      FilterPattern: 'ERROR OR WARNING OR DENY'
      MetricTransformations:
        - MetricName: SecurityEvents
          MetricNamespace: !Sub "${ProjectCode}/${Environment}/Security"
          MetricValue: "1"

  # CloudWatch Alarm for Security Events
  SecurityEventAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableAccessControlCondition
    Properties:
      AlarmName: !Sub "${ProjectCode}-${Environment}-security-events"
      AlarmDescription: "Security events detected"
      MetricName: SecurityEvents
      Namespace: !Sub "${ProjectCode}/${Environment}/Security"
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-security-events"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Region
          Value: "ap-northeast-1"

  # CloudWatch Dashboard for Security
  SecurityDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: EnableAccessControlCondition
    Properties:
      DashboardName: !Sub "${ProjectCode}-${Environment}-security-dashboard"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["${ProjectCode}/${Environment}/Security", "SecurityEvents", "Environment", "${Environment}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Security Events (Tokyo Region)",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE \"${ProjectCode}-${Environment}-security-logs\"\n| fields @timestamp, @message\n| filter @message like /ERROR/ or @message like /WARNING/ or @message like /DENY/\n| sort @timestamp desc\n| limit 20",
                "region": "${AWS::Region}",
                "title": "Recent Security Events (Last 20) - Tokyo Region",
                "view": "table"
              }
            }
          ]
        }

  # IAM Role for Security Monitoring
  SecurityMonitoringRole:
    Type: AWS::IAM::Role
    Condition: EnableAccessControlCondition
    Properties:
      RoleName: !Sub "${ProjectCode}-${Environment}-security-monitoring-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        - PolicyName: SecurityMonitoringAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-security-monitoring-role"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Region
          Value: "ap-northeast-1"

  # ???????????????????????????
  # ????????????????????????CloudWatch Log Group
  JapaneseComplianceSecurityLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: EnableJapaneseComplianceCondition
    Properties:
      LogGroupName: !Sub "/aws/security/compliance/japanese/${ProjectCode}/${Environment}"
      RetentionInDays: !Ref CloudWatchLogRetentionDays
      Tags:
        - Key: Name
          Value: !Sub "${ProjectCode}-${Environment}-japanese-compliance-security-logs"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectCode
        - Key: Region
          Value: "ap-northeast-1"
        - Key: Compliance
          Value: "Japanese"

  # ????????????????????CloudWatch Dashboard
  JapaneseSecurityDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: EnableJapaneseSecurityCondition
    Properties:
      DashboardName: !Sub "${ProjectCode}-${Environment}-japanese-security-dashboard"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 3,
              "properties": {
                "markdown": "## ????????????????????????????(Tokyo Region)\n\n- **??????????**: ap-northeast-1 (Tokyo)\n- **????*: ${Environment}\n- **???????????*: ${ProjectCode}\n- **???????????????**: ???????????????n- **???????????**: ??????????????????????????"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 3,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["${ProjectCode}/${Environment}/Security", "SecurityEvents", "Environment", "${Environment}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ap-northeast-1",
                "title": "??????????????????(Security Events)",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 3,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE \"${ProjectCode}-${Environment}-japanese-compliance-security-logs\"\n| fields @timestamp, @message\n| filter @message like /??????/ or @message like /???? or @message like /ERROR/ or @message like /WARNING/\n| sort @timestamp desc\n| limit 20",
                "region": "ap-northeast-1",
                "title": "???????????????????? (Japanese Security Logs)",
                "view": "table"
              }
            }
          ]
        }

  # ???????????????????????????????????????
  TokyoRegionSecurityMetrics:
    Type: AWS::CloudWatch::Dashboard
    Condition: EnableTokyoRegionSecurityCondition
    Properties:
      DashboardName: !Sub "${ProjectCode}-${Environment}-tokyo-region-security-metrics"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "text",
              "x": 0,
              "y": 0,
              "width": 24,
              "height": 2,
              "properties": {
                "markdown": "## Tokyo Region Security Metrics (ap-northeast-1)"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Region", "Region", "Region", "ap-northeast-1"]
                ],
                "view": "singleValue",
                "region": "ap-northeast-1",
                "title": "Tokyo Region Status",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["${ProjectCode}/${Environment}/Security", "SecurityEvents", "Environment", "${Environment}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ap-northeast-1",
                "title": "Security Events",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 2,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/IAM", "AccessDenied", "Region", "ap-northeast-1"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ap-northeast-1",
                "title": "IAM Access Denied",
                "period": 300
              }
            }
          ]
        }

Outputs:
  AdminGroupName:
    Description: Name of the admin IAM group
    Value: !If [EnableIAMGroupsCondition, !Ref SESAdminGroup, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-AdminGroupName"

  ReadOnlyGroupName:
    Description: Name of the readonly IAM group
    Value: !If [EnableIAMGroupsCondition, !Ref SESReadOnlyGroup, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-ReadOnlyGroupName"

  MonitoringGroupName:
    Description: Name of the monitoring IAM group
    Value: !If [EnableIAMGroupsCondition, !Ref SESMonitoringGroup, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-MonitoringGroupName"

  AdminUserName:
    Description: Name of the admin IAM user
    Value: !If [EnableIAMUsersCondition, !Ref SESAdminUser, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-AdminUserName"

  ReadOnlyUserName:
    Description: Name of the readonly IAM user
    Value: !If [EnableIAMUsersCondition, !Ref SESReadOnlyUser, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-ReadOnlyUserName"

  MonitoringUserName:
    Description: Name of the monitoring IAM user
    Value: !If [EnableIAMUsersCondition, !Ref SESMonitoringUser, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-MonitoringUserName"

  SecurityLogGroupName:
    Description: Name of the CloudWatch log group for security events
    Value: !If [EnableAccessControlCondition, !Ref SecurityLogGroup, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SecurityLogGroupName"

  SecurityDashboardName:
    Description: Name of the CloudWatch security dashboard
    Value: !If [EnableAccessControlCondition, !Ref SecurityDashboard, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SecurityDashboardName"

  SecurityMonitoringRoleArn:
    Description: ARN of the IAM role for security monitoring
    Value: !If [EnableAccessControlCondition, !GetAtt SecurityMonitoringRole.Arn, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-SecurityMonitoringRoleArn"

  JapaneseComplianceSecurityLogGroupName:
    Description: Name of the Japanese compliance CloudWatch log group for security
    Value: !If [EnableJapaneseComplianceCondition, !Ref JapaneseComplianceSecurityLogGroup, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-JapaneseComplianceSecurityLogGroupName"

  JapaneseSecurityDashboardName:
    Description: Name of the Japanese security CloudWatch dashboard
    Value: !If [EnableJapaneseSecurityCondition, !Ref JapaneseSecurityDashboard, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-JapaneseSecurityDashboardName"

  TokyoRegionSecurityMetricsName:
    Description: Name of the Tokyo region security metrics CloudWatch dashboard
    Value: !If [EnableTokyoRegionSecurityCondition, !Ref TokyoRegionSecurityMetrics, !Ref "AWS::NoValue"]
    Export:
      Name: !Sub "${ProjectCode}-${Environment}-TokyoRegionSecurityMetricsName"
